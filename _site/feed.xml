<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Progress Blog</title>
		<description>This is a blog where I document my projects and progress as a computer scientist/programmer/software engineer.</description>
		<link></link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Scala Specialization Part 2 Week 8</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#bloxorz&quot;&gt;Bloxorz&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#instructions&quot;&gt;Instructions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#my-solution&quot;&gt;My Solution&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;bloxorz&quot;&gt;Bloxorz&lt;/h1&gt;

&lt;p&gt;This week’s assignment involves computing solutions for a puzzle game, &lt;a href=&quot;https://www.coolmathgames.com/0-bloxorz&quot;&gt;Bloxorz&lt;/a&gt;. We had to provide implementations for three files, listed below.&lt;/p&gt;

&lt;h2 id=&quot;instructions&quot;&gt;Instructions&lt;/h2&gt;

&lt;embed src=&quot;/assets/docs/scala_specialization/Part2/Week8/Bloxorz_Coursera.pdf&quot; style=&quot;width:100%&quot; height=&quot;500ex&quot; /&gt;

&lt;h2 id=&quot;my-solution&quot;&gt;My Solution&lt;/h2&gt;

&lt;div class=&quot;panel-group&quot; style=&quot;border-color:#292929; color:#444444;&quot;&gt;
  &lt;div class=&quot;panel panel-default&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
    &lt;div class=&quot;panel-heading&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
      &lt;h4 class=&quot;panel-title&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
        &lt;button class=&quot;btn&quot; data-toggle=&quot;collapse&quot; style=&quot;background-color:#35B4DE; color:#444444;&quot; data-target=&quot;#toggle-GameDef&quot;&gt;
           GameDef 
        &lt;/button&gt;
      &lt;/h4&gt;
    &lt;/div&gt;
    &lt;div id=&quot;toggle-GameDef&quot; class=&quot;panel-collapse collapse&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444; outline-color:#ff0000;&quot;&gt;
      &lt;div class=&quot;panel-body&quot;&gt;
&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;Scala&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;streams&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;common._&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * This trait represents the layout and building blocks of the game
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GameDef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * The case class `Pos` encodes positions in the terrain.
   *
   * IMPORTANT NOTE
   *  - The `row` coordinate denotes the position on the vertical axis
   *  - The `col` coordinate is used for the horizontal axis
   *  - The coordinates increase when moving down and right
   *
   * Illustration:
   *
   *     0 1 2 3   &amp;lt;- col axis
   *   0 o o o o
   *   1 o o o o
   *   2 o # o o    # is at position Pos(2, 1)
   *   3 o o o o
   *
   *   ^
   *   |
   *
   *   row axis
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** The position obtained by changing the `row` coordinate by `d` */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/** The position obtained by changing the `col` coordinate by `d` */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * The position where the block is located initially.
   *
   * This value is left abstract, it will be defined in concrete
   * instances of the game.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startPos&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * The target position where the block has to go.
   * This value is left abstract.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * The terrain is represented as a function from positions to
   * booleans. The function returns `true` for every position that
   * is inside the terrain.
   *
   * As explained in the documentation of class `Pos`, the `row` axis
   * is the vertical one and increases from top to bottom.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Terrain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pos&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt;


  &lt;span class=&quot;cm&quot;&gt;/**
   * The terrain of this game. This value is left abstract.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terrain&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Terrain&lt;/span&gt;


  &lt;span class=&quot;cm&quot;&gt;/**
   * In Bloxorz, we can move left, right, Up or down.
   * These moves are encoded as case objects.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;sealed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Move&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Move&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Move&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Up&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Move&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Down&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Move&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * This function returns the block at the start position of
   * the game.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startBlock&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startPos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startPos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;


  &lt;span class=&quot;cm&quot;&gt;/**
   * A block is represented by the position of the two cubes that
   * it consists of. We make sure that `b1` is lexicographically
   * smaller than `b2`.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// checks the requirement mentioned above
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Invalid block position: b1=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, b2=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Returns a block where the `row` coordinates of `b1` and `b2` are
     * changed by `d1` and `d2`, respectively.
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Returns a block where the `col` coordinates of `b1` and `b2` are
     * changed by `d1` and `d2`, respectively.
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;


    &lt;span class=&quot;cm&quot;&gt;/** The block obtained by moving left */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isStanding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;             &lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;                        &lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/** The block obtained by moving right */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isStanding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;                       &lt;span class=&quot;n&quot;&gt;deltaCol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/** The block obtained by moving up */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;up&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isStanding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;                          &lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/** The block obtained by moving down */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;down&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isStanding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;             &lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;                        &lt;span class=&quot;n&quot;&gt;deltaRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;


    &lt;span class=&quot;cm&quot;&gt;/**
     * Returns the list of blocks that can be obtained by moving
     * the current block, together with the corresponding move.
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Up&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;
                                         &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;down&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Down&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;
                                         &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;
                                         &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Returns the list of positions reachable from the current block
     * which are inside the terrain.
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;legalNeighbors&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isLegal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Returns `true` if the block is standing.
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isStanding&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Returns `true` if the block is entirely inside the terrain.
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isLegal&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terrain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terrain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;/div&gt;
      &lt;div class=&quot;panel-footer&quot; style=&quot;background-color:#292929; color:#dddddd;&quot;&gt;End of GameDef&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;panel-group&quot; style=&quot;border-color:#292929; color:#444444;&quot;&gt;
  &lt;div class=&quot;panel panel-default&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
    &lt;div class=&quot;panel-heading&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
      &lt;h4 class=&quot;panel-title&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
        &lt;button class=&quot;btn&quot; data-toggle=&quot;collapse&quot; style=&quot;background-color:#35B4DE; color:#444444;&quot; data-target=&quot;#toggle-Solver&quot;&gt;
           Solver 
        &lt;/button&gt;
      &lt;/h4&gt;
    &lt;/div&gt;
    &lt;div id=&quot;toggle-Solver&quot; class=&quot;panel-collapse collapse&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444; outline-color:#ff0000;&quot;&gt;
      &lt;div class=&quot;panel-body&quot;&gt;
&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;Scala&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;streams&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;common._&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * This component implements the solver for the Bloxorz game
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solver&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GameDef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * Returns `true` if the block `b` is at the final position
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isStanding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * This function takes two arguments: the current block `b` and
   * a list of moves `history` that was required to reach the
   * position of `b`.
   *
   * The `head` element of the `history` list is the latest move
   * that was executed, i.e. the last move that was performed for
   * the block to end up at position `b`.
   *
   * The function returns a stream of pairs: the first element of
   * the each pair is a neighboring block, and the second element
   * is the augmented history of moves required to reach this block.
   *
   * It should only return valid neighbors, i.e. block positions
   * that are inside the terrain.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neighborsWithHistory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legalNeighbors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toStream&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * This function returns the list of neighbors without the block
   * positions that have already been explored. We will use it to
   * make sure that we don't explore circular paths.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newNeighborsOnly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])],&lt;/span&gt;
                       &lt;span class=&quot;n&quot;&gt;explored&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isNotExplored&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]))&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;explored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isNotExplored&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * The function `from` returns the stream of all possible paths
   * that can be followed, starting at the `head` of the `initial`
   * stream.
   *
   * The blocks in the stream `initial` are sorted by ascending path
   * length: the block positions with the shortest paths (length of
   * move list) are at the head of the stream.
   *
   * The parameter `explored` is a set of block positions that have
   * been visited before, on the path to any of the blocks in the
   * stream `initial`. When search reaches a block that has already
   * been explored before, that position should not be included a
   * second time to avoid cycles.
   *
   * The resulting stream should be sorted by ascending path length,
   * i.e. the block positions that can be reached with the fewest
   * amount of moves should appear first in the stream.
   *
   * Note: the solution should not look at or compare the lengths
   * of different paths - the implementation should naturally
   * construct the correctly sorted stream.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initial&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])],&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;explored&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newBlocks&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newNeighborsOnly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;neighborsWithHistory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;explored&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newExplored&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newBlocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toSet&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newExplored&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#:::&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#:::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newBlocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;explored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newExplored&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * The stream of all paths that begin at the starting block.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathsFromStart&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startBlock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())),&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startBlock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * Returns a stream of all possible pairs of the goal block along
   * with the history how it was reached.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathsToGoal&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Block&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathsFromStart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * The (or one of the) shortest sequence(s) of moves to reach the
   * goal. If the goal cannot be reached, the empty list is returned.
   *
   * Note: the `head` element of the returned list should represent
   * the first move that the player should perform from the starting
   * position.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pathsToGoal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shortestPathReversed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathsToGoal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_2&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;shortestPathReversed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;/div&gt;
      &lt;div class=&quot;panel-footer&quot; style=&quot;background-color:#292929; color:#dddddd;&quot;&gt;End of Solver&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;panel-group&quot; style=&quot;border-color:#292929; color:#444444;&quot;&gt;
  &lt;div class=&quot;panel panel-default&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
    &lt;div class=&quot;panel-heading&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
      &lt;h4 class=&quot;panel-title&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
        &lt;button class=&quot;btn&quot; data-toggle=&quot;collapse&quot; style=&quot;background-color:#35B4DE; color:#444444;&quot; data-target=&quot;#toggle-StringParserTerrain&quot;&gt;
           StringParserTerrain 
        &lt;/button&gt;
      &lt;/h4&gt;
    &lt;/div&gt;
    &lt;div id=&quot;toggle-StringParserTerrain&quot; class=&quot;panel-collapse collapse&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444; outline-color:#ff0000;&quot;&gt;
      &lt;div class=&quot;panel-body&quot;&gt;
&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;Scala&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;streams&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;common._&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * This component implements a parser to define terrains from a
 * graphical ASCII representation.
 *
 * When mixing in that component, a level can be defined by
 * defining the field `level` in the following form:
 *
 *   val level =
 *     &quot;&quot;&quot;------
 *       |--ST--
 *       |--oo--
 *       |--oo--
 *       |------&quot;&quot;&quot;.stripMargin
 *
 * - The `-` character denotes parts which are outside the terrain
 * - `o` denotes fields which are part of the terrain
 * - `S` denotes the start position of the block (which is also considered
     inside the terrain)
 * - `T` denotes the final position of the block (which is also considered
     inside the terrain)
 *
 * In this example, the first and last lines could be omitted, and
 * also the columns that consist of `-` characters only.
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StringParserTerrain&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GameDef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * A ASCII representation of the terrain. This field should remain
   * abstract here.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * This method returns terrain function that represents the terrain
   * in `levelVector`. The vector contains parsed version of the `level`
   * string. For example, the following level
   *
   *   val level =
   *     &quot;&quot;&quot;ST
   *       |oo
   *       |oo&quot;&quot;&quot;.stripMargin
   *
   * is represented as
   *
   *   Vector(Vector('S', 'T'), Vector('o', 'o'), Vector('o', 'o'))
   *
   * The resulting function should return `true` if the position `pos` is
   * a valid position (not a '-' character) inside the terrain described
   * by `levelVector`.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terrainFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;levelVector&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;levelVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;levelVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;levelVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * This function should return the position of character `c` in the
   * terrain described by `levelVector`. You can assume that the `c`
   * appears exactly once in the terrain.
   *
   * Hint: you can use the functions `indexWhere` and / or `indexOf` of the
   * `Vector` class
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findChar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;levelVector&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;levelVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexWhere&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;levelVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;Pos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terrain&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Terrain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terrainFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startPos&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findChar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'S'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findChar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'T'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;/div&gt;
      &lt;div class=&quot;panel-footer&quot; style=&quot;background-color:#292929; color:#dddddd;&quot;&gt;End of StringParserTerrain&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

</description>
				<pubDate>Fri, 11 Jan 2019 00:00:00 -0600</pubDate>
				<link>/2019/01/11/Scala-Spec-Pt-2-Wk-8</link>
				<guid isPermaLink="true">/2019/01/11/Scala-Spec-Pt-2-Wk-8</guid>
			</item>
		
			<item>
				<title>Scala Specialization Part 1 Week 6</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#anagrams&quot;&gt;Anagrams&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#instructions&quot;&gt;Instructions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#my-solution&quot;&gt;My Solution&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;anagrams&quot;&gt;Anagrams&lt;/h1&gt;

&lt;p&gt;This week’s assignment involves computing sentence anagrams (ignoring spaces and punctuation).&lt;/p&gt;

&lt;h2 id=&quot;instructions&quot;&gt;Instructions&lt;/h2&gt;

&lt;embed src=&quot;/assets/docs/scala_specialization/Part1/Week6/Anagrams_Scala.pdf&quot; style=&quot;width:100%&quot; height=&quot;500ex&quot; /&gt;

&lt;h2 id=&quot;my-solution&quot;&gt;My Solution&lt;/h2&gt;

&lt;div class=&quot;panel-group&quot; style=&quot;border-color:#292929; color:#444444;&quot;&gt;
  &lt;div class=&quot;panel panel-default&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
    &lt;div class=&quot;panel-heading&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
      &lt;h4 class=&quot;panel-title&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444;&quot;&gt;
        &lt;button class=&quot;btn&quot; data-toggle=&quot;collapse&quot; style=&quot;background-color:#35B4DE; color:#444444;&quot; data-target=&quot;#toggle-Anagrams&quot;&gt;
           Anagrams 
        &lt;/button&gt;
      &lt;/h4&gt;
    &lt;/div&gt;
    &lt;div id=&quot;toggle-Anagrams&quot; class=&quot;panel-collapse collapse&quot; style=&quot;border-color:#292929; background-color:#292929; color:#444444; outline-color:#ff0000;&quot;&gt;
      &lt;div class=&quot;panel-body&quot;&gt;
&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;Scala&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;ipackage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forcomp&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Anagrams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/** A word is simply a `String`. */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/** A sentence is a `List` of words. */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sentence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/** `Occurrences` is a `List` of pairs of characters and positive integers saying
   *  how often the character appears.
   *  This list is sorted alphabetically w.r.t. to the character in each pair.
   *  All characters in the occurrence list are lowercase.
   *
   *  Any list of pairs of lowercase characters and their frequency which is not sorted
   *  is **not** an occurrence list.
   *
   *  Note: If the frequency of some character is zero, then that character should not be
   *  in the list.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/** The dictionary is simply a sequence of words.
   *  It is predefined and obtained as a sequence using the utility method `loadDictionary`.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loadDictionary&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/** Converts the word into its character occurrence list.
   *
   *  Note: the uppercase and lowercase version of the character are treated as the
   *  same character, and are represented as a lowercase character in the occurrence list.
   *
   *  Note: you must use `groupBy` to implement this method!
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordOccurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groupMap&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groupBy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toLower&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groupMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sorted&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/** Converts a sentence into its character occurrence list. */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sentenceOccurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sentence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordOccurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/** The `dictionaryByOccurrences` is a `Map` from different occurrences to a sequence of all
   *  the words that have that occurrence count.
   *  This map serves as an easy way to obtain all the anagrams of a word given its occurrence list.
   *
   *  For example, the word &quot;eat&quot; has the following character occurrence list:
   *
   *     `List(('a', 1), ('e', 1), ('t', 1))`
   *
   *  Incidentally, so do the words &quot;ate&quot; and &quot;tea&quot;.
   *
   *  This means that the `dictionaryByOccurrences` map will contain an entry:
   *
   *    List(('a', 1), ('e', 1), ('t', 1)) -&amp;gt; Seq(&quot;ate&quot;, &quot;eat&quot;, &quot;tea&quot;)
   *
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionaryByOccurrences&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groupBy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordOccurrences&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/** Returns all the anagrams of a given word. */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordAnagrams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordAnagrams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordOccurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordAnagrams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordOcc&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionaryByOccurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordOcc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;None&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/** Returns the list of all subsets of the occurrence list.
   *  This includes the occurrence itself, i.e. `List(('k', 1), ('o', 1))`
   *  is a subset of `List(('k', 1), ('o', 1))`.
   *  It also include the empty subset `List()`.
   *
   *  Example: the subsets of the occurrence list `List(('a', 2), ('b', 2))` are:
   *
   *    List(
   *      List(),
   *      List(('a', 1)),
   *      List(('a', 2)),
   *      List(('b', 1)),
   *      List(('a', 1), ('b', 1)),
   *      List(('a', 2), ('b', 1)),
   *      List(('b', 2)),
   *      List(('a', 1), ('b', 2)),
   *      List(('a', 2), ('b', 2))
   *    )
   *
   *  Note that the order of the occurrence list subsets does not matter -- the subsets
   *  in the example above could have been displayed in some other order.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combinations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;occurrences&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;,&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elelist&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;occurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elelist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;combos&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elelist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;combinations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toList&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;combos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toList&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//type Occurrences = List[(Char, Int)]
&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/** Subtracts occurrence list `y` from occurrence list `x`.
   *
   *  The precondition is that the occurrence list `y` is a subset of
   *  the occurrence list `x` -- any character appearing in `y` must
   *  appear in `x`, and its frequency in `y` must be smaller or equal
   *  than its frequency in `x`.
   *
   *  Note: the resulting value is an occurrence - meaning it is sorted
   *  and has no zero-entries.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;,&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


  &lt;span class=&quot;cm&quot;&gt;/** Returns a list of all anagram sentences of the given sentence.
   *
   *  An anagram of a sentence is formed by taking the occurrences of all the characters of
   *  all the words in the sentence, and producing all possible combinations of words with those characters,
   *  such that the words have to be from the dictionary.
   *
   *  The number of words in the sentence and its anagrams does not have to correspond.
   *  For example, the sentence `List(&quot;I&quot;, &quot;love&quot;, &quot;you&quot;)` is an anagram of the sentence `List(&quot;You&quot;, &quot;olive&quot;)`.
   *
   *  Also, two sentences with the same words but in a different order are considered two different anagrams.
   *  For example, sentences `List(&quot;You&quot;, &quot;olive&quot;)` and `List(&quot;olive&quot;, &quot;you&quot;)` are different anagrams of
   *  `List(&quot;I&quot;, &quot;love&quot;, &quot;you&quot;)`.
   *
   *  Here is a full example of a sentence `List(&quot;Yes&quot;, &quot;man&quot;)` and its anagrams for our dictionary:
   *
   *    List(
   *      List(en, as, my),
   *      List(en, my, as),
   *      List(man, yes),
   *      List(men, say),
   *      List(as, en, my),
   *      List(as, my, en),
   *      List(sane, my),
   *      List(Sean, my),
   *      List(my, en, as),
   *      List(my, as, en),
   *      List(my, sane),
   *      List(my, Sean),
   *      List(say, men),
   *      List(yes, man)
   *    )
   *
   *  The different sentences do not have to be output in the order shown above - any order is fine as long as
   *  all the anagrams are there. Every returned word has to exist in the dictionary.
   *
   *  Note: in case that the words of the sentence are in the dictionary, then the sentence is the anagram of itself,
   *  so it has to be returned in this list.
   *
   *  Note: There is only one anagram of an empty sentence.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sentenceAnagrams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sentence&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Sentence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Sentence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Occurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;thecombo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combinations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordAnagrams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thecombo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// only continue with combos that appear in dictionary
&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordAnagrams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thecombo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;anagrams&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thecombo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anagrams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// avoid trivial empty anagrams
&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;anagram&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;anagrams&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;anagram&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sentence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sentenceOccurrences&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sentence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;/div&gt;
      &lt;div class=&quot;panel-footer&quot; style=&quot;background-color:#292929; color:#dddddd;&quot;&gt;End of Anagrams&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

</description>
				<pubDate>Mon, 07 Jan 2019 00:00:00 -0600</pubDate>
				<link>/2019/01/07/Scala-Spec-Pt-1-Wk-6</link>
				<guid isPermaLink="true">/2019/01/07/Scala-Spec-Pt-1-Wk-6</guid>
			</item>
		
			<item>
				<title>Scala Specialization Part 1 Week 5</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#instructions&quot;&gt;Instructions&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#proving-associative-property-of-list-concatenation&quot;&gt;Proving Associative property of list concatenation&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#natural-vs-structural-induction&quot;&gt;Natural vs Structural Induction&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#the-proof&quot;&gt;The Proof&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#proving-concatenation-of-nil-is-commutative&quot;&gt;Proving Concatenation of Nil is commutative&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#proving-reverse-of-a-list-is-discretely-periodic-with-order-2&quot;&gt;Proving Reverse of a list is Discretely Periodic with Order 2.&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#lemma-1-proof&quot;&gt;Lemma 1 Proof&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#proving-distributive-property-of-map-across-concatenation&quot;&gt;Proving Distributive property of map across concatenation&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;instructions&quot;&gt;Instructions&lt;/h1&gt;

&lt;p&gt;This week there are no programming assignments, but there are a few optional proofs presented in last few video lectures of this week.  I will do my best to solve these proofs by induction. (structural and natural induction)&lt;/p&gt;

&lt;h2 id=&quot;proving-associative-property-of-list-concatenation&quot;&gt;Proving Associative property of list concatenation&lt;/h2&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;natural-vs-structural-induction&quot;&gt;Natural vs Structural Induction&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;Natural induction is used to prove properties on the naturals or integers while structural induction is used to prove a property of some structure, ie a data structure such as a list.  They both require a base case and an induction step.&lt;/p&gt;

&lt;p&gt;For proving some property &lt;strong class=&quot;highlighted&quot;&gt;P(xs)&lt;/strong&gt; for all lists &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt;, we must show:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;that &lt;strong class=&quot;highlighted&quot;&gt;P(Nil)&lt;/strong&gt; is true (base case)&lt;/li&gt;
  &lt;li&gt;for a list &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; and some element &lt;strong class=&quot;highlighted&quot;&gt;x&lt;/strong&gt;, that &lt;em class=&quot;yhighlighted&quot;&gt;if &lt;strong class=&quot;highlighted&quot;&gt;P(xs)&lt;/strong&gt; holds, then &lt;strong class=&quot;highlighted&quot;&gt;P(x::xs)&lt;/strong&gt; also holds.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-proof&quot;&gt;The Proof&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;Let’s show that for lists &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt;, &lt;strong class=&quot;highlighted&quot;&gt;ys&lt;/strong&gt;, &lt;strong class=&quot;highlighted&quot;&gt;zs&lt;/strong&gt; the induction hypothesis below is true:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(xs ++ ys) ++ zs = xs ++ (ys ++ zs)  (*)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Consider this implementation of concat, which has the same behavior as “++” in the concatenation of two lists:&lt;/p&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;Scala&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;                         
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This yields two clauses for list concatentation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;       Nil ++ ys = ys                 // 1st clause 
(x :: xs1) ++ ys = x :: (xs1 ++ ys)   // 2nd clause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;First we start with the base case, where xs = Nil.  For the left side of (*) we have:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Nil ++ ys) ++ zs = 
                  = ys ++ zs  // by 1st clause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the right side of (*) we have:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nil ++ (ys ++ zs) = 
                  = ys ++ zs  // by 1st clause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thus the base case is established.&lt;/p&gt;

&lt;p&gt;Now for the induction step:&lt;/p&gt;

&lt;p&gt;Since the base case holds, we assume that (*) holds for all lists from &lt;strong class=&quot;highlighted&quot;&gt;Nil&lt;/strong&gt; to &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; and we will now show that this implies that concatentation is also associative for a list of size one more than &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; and thereby finishing the proof for concatenation associativity.&lt;/p&gt;

&lt;p&gt;We replace &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; with &lt;strong class=&quot;highlighted&quot;&gt;x :: xs&lt;/strong&gt; in (*), and prove both left and right sides equate to the same expression.  First the left side:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;((x :: xs) ++ ys) ++ zs = 
                        = (x :: (xs ++ ys)) ++ zs // by 2nd clause
                        = x :: ((xs ++ ys) ++ zs) // by 2nd clause
                        = x :: (xs ++ (ys ++ zs)) // by induction hypothesis (*)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now the right side:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(x :: xs) ++ (ys ++ zs) = 
                        = x :: (xs ++ (ys ++ zs)) // by 2nd clause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, both sides were shown to be equivalent to the same expression and thus the proof is complete.&lt;strong class=&quot;highlighted&quot;&gt;∎&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;proving-concatenation-of-nil-is-commutative&quot;&gt;Proving Concatenation of Nil is commutative&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;We will show by induction on &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; that &lt;em class=&quot;yhighlighted&quot;&gt;xs ++ Nil = xs&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Base case, where &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; is equal to &lt;strong class=&quot;highlighted&quot;&gt;Nil&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nil ++ Nil =
           = Nil // by 1st clause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Induction step, where &lt;strong class=&quot;highlighted&quot;&gt;x :: xs&lt;/strong&gt; is plugged in for &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt;.  First left side:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(x :: xs) ++ Nil = 
                 = x :: (xs ++ Nil) // by 2nd clause
                 = x :: xs          // by induction hypothesis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now for the right side:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x :: xs = x :: xs //No steps necessary, already at target expression
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since both the left and right sides equate to the same expression, the hypothesis is proven. &lt;strong class=&quot;highlighted&quot;&gt;∎&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;proving-reverse-of-a-list-is-discretely-periodic-with-order-2&quot;&gt;Proving Reverse of a list is Discretely Periodic with Order 2.&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Consider this relatively inefficient (easier to work with in proof) implementation of reverse:&lt;/p&gt;

&lt;blockquote class=&quot;filename&quot;&gt;
  &lt;p&gt;Scala&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nil&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;                         
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From this implementation we can make out the following clauses for list reversal:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      Nil.reverse = Nil                    // 1st clause
(x :: xs).reverse = xs.reverse ++ List(x)  // 2nd clause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We’d like to prove that list reversal is Discretely Periodic of Order 2, ie:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xs.reverse.reverse = xs  (**)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Base case, let  &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; be &lt;strong class=&quot;highlighted&quot;&gt;Nil&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nil.reverse.reverse = 
                    = Nil.reverse // by 1st clause
                    = Nil         // by 1st clause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Induction step, we assume the hypothesis holds for all lists from &lt;strong class=&quot;highlighted&quot;&gt;Nil&lt;/strong&gt; to &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt;.  We now show that this implies that the hypothesis also holds for a list one more larger than &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt;, ie &lt;strong class=&quot;highlighted&quot;&gt;x :: xs&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(x :: xs).reverse.reverse = 
                          = (xs.reverse ++ List(x)).reverse   // by 2nd clause
                          = x :: xs.reverse.reverse           // by Lemma 1  
                          = x :: xs                           // by induction hypothesis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And thus the hypothesis is proven for all lists. &lt;strong class=&quot;highlighted&quot;&gt;∎&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;lemma-1-proof&quot;&gt;Lemma 1 Proof&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;Consider the following statement/hypothesis:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(ys ++ List(x)).reverse = x :: ys.reverse&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We shall prove it on &lt;strong class=&quot;highlighted&quot;&gt;ys&lt;/strong&gt; by induction.  First the base case, where &lt;strong class=&quot;highlighted&quot;&gt;ys&lt;/strong&gt; is &lt;strong class=&quot;highlighted&quot;&gt;Nil&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    (Nil ++ List(x)).reverse = 
                             = List(x).reverse        // by 1st clause of list concatenation
                             = (x :: Nil).reverse     // by definition of List()
                             = Nil.reverse ++ List(x) // by 2nd clause of list reversal
                             = Nil ++ List(x)         // by 1st clause of list reversal
                             = List(x)                // by 1st clause of list concatenation
                             = x :: Nil               // by definition of List()
                             = x :: Nil.reverse       // by 1st clause of list reversal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now the induction step.  We assume the hypothesis is true for all lists from &lt;strong class=&quot;highlighted&quot;&gt;Nil&lt;/strong&gt; to &lt;strong class=&quot;highlighted&quot;&gt;ys&lt;/strong&gt;.  We will now show that this implies that the hypothesis is also true for a list one larger than &lt;strong class=&quot;highlighted&quot;&gt;ys&lt;/strong&gt;, eg &lt;strong class=&quot;highlighted&quot;&gt;y :: ys&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;((y :: ys) ++ List(x)).reverse =
                               = (y :: (ys ++ List(x))).reverse        // by 2nd clause of list concatentation
                               = (ys ++ List(x)).reverse ++ List(y)    // by 2nd clause of list reversal
                               = (x :: ys.reverse) ++ List(y)          // by induction hypothesis (**)
                               = x :: (ys.reverse ++ List(y))          // by 2nd clause of list concatenation
                               = x :: (y :: ys).reverse                // by 2nd clause of list reversal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thus the hypothesis and therefore Lemma 1 is true for all lists. &lt;strong class=&quot;highlighted&quot;&gt;∎&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;proving-distributive-property-of-map-across-concatenation&quot;&gt;Proving Distributive property of map across concatenation&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Consider these clauses of the map function:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      Nil map f = Nil                // 1st Clause
(x :: xs) map f = f(x) :: (xs map f) // 2nd Clause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We wish to prove the following hypothesis:&lt;/p&gt;

&lt;p&gt;For any lists &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt;, &lt;strong class=&quot;highlighted&quot;&gt;ys&lt;/strong&gt;, function &lt;strong class=&quot;highlighted&quot;&gt;f&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    (xs ++ ys) map f = (xs map f) ++ (ys map f)   (***)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will do so by proof by induction on &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;First the base case, where &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; is &lt;strong class=&quot;highlighted&quot;&gt;Nil&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Nil ++ ys) map f = 
                  = ys map f                  // by the 1st clause of concatenation
                  = Nil ++ (ys map f)         // by the 1st clause of concatenation
                  = (Nil map f) ++ (ys map f) // by the 1st clause of map
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Induction step, we now assume that the hypothesis holds for all lists from &lt;strong class=&quot;highlighted&quot;&gt;Nil&lt;/strong&gt; to &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt; and we will now show that this implies that the hypothesis holds for a list one larger than &lt;strong class=&quot;highlighted&quot;&gt;xs&lt;/strong&gt;, ie &lt;strong class=&quot;highlighted&quot;&gt;x :: xs&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;((x :: xs) ++ ys) map f =
                        = (x :: (xs ++ ys)) map f            // by 2nd clause of concatenation
                        = f(x) :: ((xs ++ ys) map f)         // by 2nd clause of map
                        = f(x) :: ((xs map f) ++ (ys map f)) // by induction hypothesis (***)
                        = (f(x) :: (xs map f)) ++ (ys map f) // by 2nd clause of concatenation
                        = ( (x :: xs) map f) ++ (ys map f)   // by 2nd clause of map
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A similar argument can be made for the &lt;strong class=&quot;highlighted&quot;&gt;ys&lt;/strong&gt; list and thus the hypothesis is true for any lists or function. &lt;strong class=&quot;highlighted&quot;&gt;∎&lt;/strong&gt;&lt;/p&gt;

</description>
				<pubDate>Fri, 04 Jan 2019 00:00:00 -0600</pubDate>
				<link>/2019/01/04/Scala-Spec-Pt-1-Wk-5</link>
				<guid isPermaLink="true">/2019/01/04/Scala-Spec-Pt-1-Wk-5</guid>
			</item>
		
			<item>
				<title>Sams Teach Yourself TCP/IP in 24 Hours</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#part-i-tcpip-basics&quot;&gt;Part I-TCPIP Basics&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#hour-1&quot;&gt;Hour 1&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#interesting-tidbits&quot;&gt;Interesting Tidbits&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#key-terms&quot;&gt;Key Terms&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hour-2&quot;&gt;Hour 2&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#interesting-tidbits&quot;&gt;Interesting Tidbits&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#key-terms&quot;&gt;Key Terms&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In this blog post I shall record summaries and things of interest that I learn from each chapter (hour) in &lt;a href=&quot;https://www.amazon.com/Sams-Teach-Yourself-TCP-Hours/dp/0672329964&quot;&gt;Sams Teach Yourself TCP/IP in 24 Hours 4th ed&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;part-i-tcpip-basics&quot;&gt;Part I-TCPIP Basics&lt;/h1&gt;

&lt;h2 id=&quot;hour-1&quot;&gt;Hour 1&lt;/h2&gt;

&lt;h3 id=&quot;interesting-tidbits&quot;&gt;Interesting Tidbits&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Routers (gateways)  help prevent clutter from outside networks on local networks&lt;/li&gt;
  &lt;li&gt;A lot of our TCP/IP protocols today are the result of massive efforts from US Military projects (and others)&lt;/li&gt;
  &lt;li&gt;Many different protocols for different forms of data transfer.&lt;/li&gt;
  &lt;li&gt;Standard -&amp;gt; rules for what’s expected&lt;/li&gt;
  &lt;li&gt;Implementation -&amp;gt; how the standard is fulfilled&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;key-terms&quot;&gt;Key Terms&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;ARPAnet&lt;/strong&gt;—An experimental network that was the birthplace of TCP/IP.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Domain name&lt;/strong&gt;—An alphanumeric name associated with an IP address&lt;br /&gt;
through TCP/IP’s DNS name service system.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Gateway&lt;/strong&gt;—A router that connects a LAN to a larger network. The term&lt;br /&gt;
gateway sometimes applies specifically to a router that performs some kind&lt;br /&gt;
of protocol conversion.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;IP address&lt;/strong&gt;—A logical address used to locate a computer or other networked&lt;br /&gt;
device (such as a printer) on a TCP/IP network.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Logical address&lt;/strong&gt;—A network address configured through the protocol software.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Name service&lt;/strong&gt;—A service that associates human-friendly alphanumeric&lt;br /&gt;
names with network addresses.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Physical address&lt;/strong&gt;—A permanent address burned into a network adapter in&lt;br /&gt;
the factory.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Port&lt;/strong&gt;—An internal address that provides an interface between an application&lt;br /&gt;
and TCP/IP’s Transport layer.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Protocol system&lt;/strong&gt;—A system of standards and procedures that enables comput-&lt;br /&gt;
ers to communicate over a network.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;RFC (Request for Comment)&lt;/strong&gt;—An official technical paper providing relevant&lt;br /&gt;
information on TCP/IP or the Internet. You can find the RFCs at several places&lt;br /&gt;
on the Internet—try www.rfc-editor.org.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Router&lt;/strong&gt;—A network device that forwards data by logical address and can also&lt;br /&gt;
be used to segment large networks into smaller subnetworks.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;TCP/IP&lt;/strong&gt;—A network protocol suite used on the Internet and also on many&lt;br /&gt;
other networks around the world.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;hour-2&quot;&gt;Hour 2&lt;/h2&gt;

&lt;h3 id=&quot;interesting-tidbits-1&quot;&gt;Interesting Tidbits&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;There are different models for TCP/IP protocols, but they generally have four main layers:
    &lt;ul&gt;
      &lt;li&gt;Application layer&lt;/li&gt;
      &lt;li&gt;Transport Layer (TCP (reliable but slower) or UDP(faster but less reliable))&lt;/li&gt;
      &lt;li&gt;Internet Layer&lt;/li&gt;
      &lt;li&gt;Network Access Layer&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Others, such as the OSI model, define more precise layers, but in general can roughly be grouped into four main layers listed above.&lt;/li&gt;
  &lt;li&gt;As messages travel from one layer to the next, outgoing messages get &lt;strong class=&quot;highlighted&quot;&gt;encapsulated&lt;/strong&gt; with header messages (contain info on how to handle message) and incoming messages have their headers unwrapped.&lt;/li&gt;
  &lt;li&gt;IP addresses are logical addresses to identify machines on a network (local or internet)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;key-terms-1&quot;&gt;Key Terms&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Application layer&lt;/strong&gt;—The layer of the TCP/IP stack that supports network appli-&lt;br /&gt;
cations and provides an interface to the local operating environment.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Datagram&lt;/strong&gt;—The data package passed from the Internet layer to the Network&lt;br /&gt;
Access layer, or a data package passed from UDP at the Transport layer to the&lt;br /&gt;
Internet layer.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Frame&lt;/strong&gt;—The data package created at the Network Access layer.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Header&lt;/strong&gt;—A bundle of protocol information attached to the data at each layer&lt;br /&gt;
of the protocol stack.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Internet layer&lt;/strong&gt;—The layer of the TCP/IP stack that provides logical addressing&lt;br /&gt;
and routing.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;IP (Internet Protocol)&lt;/strong&gt;—The Internet layer protocol that provides logical&lt;br /&gt;
addressing and routing capabilities.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Message&lt;/strong&gt;—In TCP/IP networking, a message is the data package passed from&lt;br /&gt;
the Application layer to the Transport layer. The term is also used generically&lt;br /&gt;
to describe a message from one entity to another on the network. The term&lt;br /&gt;
doesn’t always refer to an Application layer data package.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Network Access layer&lt;/strong&gt;—The layer of the TCP/IP stack that provides an inter-&lt;br /&gt;
face with the physical network.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Segment&lt;/strong&gt;—The data package passed from TCP at the Transport layer to the&lt;br /&gt;
Internet layer.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Application layer&lt;/strong&gt;—The layer of the TCP/IP stack that supports network appli-&lt;br /&gt;
cations and provides an interface to the local operating environment.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Datagram&lt;/strong&gt;—The data package passed from the Internet layer to the Network&lt;br /&gt;
Access layer, or a data package passed from UDP at the Transport layer to the&lt;br /&gt;
Internet layer.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Frame&lt;/strong&gt;—The data package created at the Network Access layer.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Header&lt;/strong&gt;—A bundle of protocol information attached to the data at each layer&lt;br /&gt;
of the protocol stack.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Internet layer&lt;/strong&gt;—The layer of the TCP/IP stack that provides logical addressing&lt;br /&gt;
and routing.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;IP (Internet Protocol)&lt;/strong&gt;—The Internet layer protocol that provides logical&lt;br /&gt;
addressing and routing capabilities.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Message&lt;/strong&gt;—In TCP/IP networking, a message is the data package passed from&lt;br /&gt;
the Application layer to the Transport layer. The term is also used generically&lt;br /&gt;
to describe a message from one entity to another on the network. The term&lt;br /&gt;
doesn’t always refer to an Application layer data package.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Network Access layer&lt;/strong&gt;—The layer of the TCP/IP stack that provides an inter-&lt;br /&gt;
face with the physical network.&lt;/li&gt;
  &lt;li&gt;&lt;strong class=&quot;highlighted&quot;&gt;Segment&lt;/strong&gt;—The data package passed from TCP at the Transport layer to the&lt;br /&gt;
Internet layer.&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Wed, 05 Dec 2018 00:00:00 -0600</pubDate>
				<link>/2018/12/05/Teach-Yourself-TCPIP</link>
				<guid isPermaLink="true">/2018/12/05/Teach-Yourself-TCPIP</guid>
			</item>
		
			<item>
				<title>MCS 1st Semester Week 14 Notes</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals&quot;&gt;Goals&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-concepts&quot;&gt;Key Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#readings-and-resources&quot;&gt;Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#security&quot;&gt;Security&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#basic-security-concept&quot;&gt;Basic Security Concept&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#basic-cryptography-concepts&quot;&gt;Basic Cryptography Concepts&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#implementing-mechanism-using-cryptography&quot;&gt;Implementing Mechanism using Cryptography&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#datacenter-outage-studies&quot;&gt;Datacenter Outage Studies&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#what-causes-disasters&quot;&gt;What Causes Disasters&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#aws-outage&quot;&gt;AWS Outage&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#facebook-outage&quot;&gt;Facebook Outage&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#the-planet-outage&quot;&gt;The Planet Outage&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#wrap-up&quot;&gt;Wrap-up&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives&quot;&gt;Goals and Objectives&lt;/h2&gt;

&lt;h2 id=&quot;guiding-questions&quot;&gt;Guiding Questions&lt;/h2&gt;

&lt;h2 id=&quot;additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/h2&gt;

&lt;h2 id=&quot;key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/h2&gt;

&lt;h2 id=&quot;video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h1 id=&quot;cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals&quot;&gt;Goals&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Know and design security policies.&lt;/li&gt;
  &lt;li&gt;Know, apply, and design security mechanisms.&lt;/li&gt;
  &lt;li&gt;Know the common properties of various types of networks.&lt;/li&gt;
  &lt;li&gt;See case studies of multiple real datacenter outages, and learn lessons from them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-concepts&quot;&gt;Key Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Security policies vs. mechanisms&lt;/li&gt;
  &lt;li&gt;Security mechanisms: encryption, authentication, authorization&lt;/li&gt;
  &lt;li&gt;Common characteristics among the various types of networks that surround us&lt;/li&gt;
  &lt;li&gt;Why do datacenters suffer outages and what can we do about it?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guiding-questions-1&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;What is the difference between confidentiality, integrity, and availability?&lt;/li&gt;
  &lt;li&gt;What is the difference between authentication, authorization, and auditing?&lt;/li&gt;
  &lt;li&gt;What is a replay attack?&lt;/li&gt;
  &lt;li&gt;What is the difference between public-private key cryptography and shared key cryptography?&lt;/li&gt;
  &lt;li&gt;What is a small world network?&lt;/li&gt;
  &lt;li&gt;What is the difference between a small network and a power law network?&lt;/li&gt;
  &lt;li&gt;What is the most common cause of datacenter outages?&lt;/li&gt;
  &lt;li&gt;What are three techniques to mitigate datacenter outages?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;readings-and-resources&quot;&gt;Readings and Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;200~http://www.availabilitydigest.com/public_articles/0704/data_center_outages-lessons.pdf&quot;&gt;Availability Digest Report&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://aws.amazon.com/message/65648/&quot;&gt;AWS Outage Post-mortem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/notes/facebook-engineering/more-details-on-todays-outage/431441338919&quot;&gt;Facebook Outage Post-mortem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.availabilitydigest.com/public_articles/0309/planet_explosion.pdf&quot;&gt;The Planet Outage Post-mortem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes-1&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;security&quot;&gt;Security&lt;/h3&gt;

&lt;h4 id=&quot;basic-security-concept&quot;&gt;Basic Security Concept&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;basic-cryptography-concepts&quot;&gt;Basic Cryptography Concepts&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;implementing-mechanism-using-cryptography&quot;&gt;Implementing Mechanism using Cryptography&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;datacenter-outage-studies&quot;&gt;Datacenter Outage Studies&lt;/h3&gt;

&lt;h4 id=&quot;what-causes-disasters&quot;&gt;What Causes Disasters&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;aws-outage&quot;&gt;AWS Outage&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;facebook-outage&quot;&gt;Facebook Outage&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;the-planet-outage&quot;&gt;The Planet Outage&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-051.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181205/CS425-wk14-img-052.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;wrap-up&quot;&gt;Wrap-up&lt;/h4&gt;

&lt;h1 id=&quot;cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives-1&quot;&gt;Goals and Objectives&lt;/h2&gt;

&lt;h2 id=&quot;video-lecture-notes-2&quot;&gt;Video Lecture Notes&lt;/h2&gt;

</description>
				<pubDate>Wed, 05 Dec 2018 00:00:00 -0600</pubDate>
				<link>/2018/12/05/MCS-Notes-Week-14</link>
				<guid isPermaLink="true">/2018/12/05/MCS-Notes-Week-14</guid>
			</item>
		
			<item>
				<title>MCS 1st Semester Week 12 Notes</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#12-1-opinion-mining-and-sentiment-analysis&quot;&gt;12-1 Opinion Mining and Sentiment Analysis&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#12-1-1-latent-aspect-rating-analysis-part-1&quot;&gt;12-1-1 Latent Aspect Rating Analysis Part 1&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#12-1-2-latent-aspect-rating-analysis-part-2&quot;&gt;12-1-2 Latent Aspect Rating Analysis Part 2&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#12-2-text-based-prediction&quot;&gt;12-2 Text-Based Prediction&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#12-3-contextual-text-mining&quot;&gt;12-3 Contextual Text Mining&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#12-3-1-motivation&quot;&gt;12-3-1 Motivation&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#12-3-2-contextual-probabilistic-latent-semantic-analysis&quot;&gt;12-3-2 Contextual Probabilistic Latent Semantic Analysis&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#12-3-3-mining-topics-with-social-network-context&quot;&gt;12-3-3 Mining topics with social network context&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#12-3-4-mining-causal-topics-with-time-series-supervision&quot;&gt;12-3-4 Mining Causal Topics with Time Series Supervision&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#12-4-summary-for-exam-2&quot;&gt;12-4 Summary for Exam 2&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals&quot;&gt;Goals&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-concepts&quot;&gt;Key Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#readings-and-resources&quot;&gt;Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#distributed-file-systems&quot;&gt;Distributed File Systems&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#file-system-abstraction&quot;&gt;File System Abstraction&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#nfs-and-afs&quot;&gt;NFS and AFS&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#distributed-shared-memory&quot;&gt;Distributed Shared Memory&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#sensor-networks&quot;&gt;Sensor Networks&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives&quot;&gt;Goals and Objectives&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Explain why it is necessary and useful to perform joint analysis and mining for text and non-text data.&lt;/li&gt;
  &lt;li&gt;Explain the general idea of Contextual Probabilistic Latent Semantic Analysis (CPLSA) and the main difference between CPLSA and PLSA.&lt;/li&gt;
  &lt;li&gt;Give multiple application examples of CPLSA for contextual text mining.&lt;/li&gt;
  &lt;li&gt;Explain the general idea of using the social network of authors as context to analyze topics in text data and its potential benefit from an application perspective.&lt;/li&gt;
  &lt;li&gt;Explain how a time series (such as stock prices) can be used as context to analyze topics in text data that have time stamps using topic models&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guiding-questions&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Why is text-based prediction interesting from an application perspective? Why are humans playing an important role in text-based prediction? What is the “data mining loop”?&lt;/li&gt;
  &lt;li&gt;Why is it necessary and useful to jointly mine and analyze text and non-text data? How can non-text data potentially help in analyzing text data? How can text data potentially help in mining non-text data?&lt;/li&gt;
  &lt;li&gt;Can you give some examples of context of a text article? How can we partition text data using context information? Can you give some examples where we can leverage context information to perform interesting comparative analysis of topics in text data?&lt;/li&gt;
  &lt;li&gt;What’s the general idea of Contextual Probabilistic Latent Semantic Analysis (CPLSA)? How is it different from PLSA?&lt;/li&gt;
  &lt;li&gt;Can you give some examples of interesting topic patterns that can be found by CPLSA? What’s the general idea of using CPLSA for analyzing the impact of an event? Can you think of an interesting application of this kind?&lt;/li&gt;
  &lt;li&gt;What’s the general idea of using the social network of authors of text data as a complex context to improve topic analysis for text data? Can you give an example of an interesting application of this kind?&lt;/li&gt;
  &lt;li&gt;What’s the general idea of using a time series like stock prices over time to supervise the discovery of topics from text data? Can you give an example of an interesting application of this kind?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;C. Zhai and S. Massung, Text Data Management and Analysis: A Practical Introduction to Information Retrieval and Text Mining. ACM and Morgan &amp;amp; Claypool Publishers, 2016. Chapters 18 &amp;amp; 19.&lt;/li&gt;
  &lt;li&gt;Hongning Wang, Yue Lu, and ChengXiang Zhai, Latent aspect rating analysis on review text data: a rating regression approach. In Proceedings of ACM KDD 2010, pp. 783-792, 2010. doi: 10.1145/1835804.1835903&lt;/li&gt;
  &lt;li&gt;Hongning Wang, Yue Lu, and ChengXiang Zhai. 2011. Latent aspect rating analysis without aspect keyword supervision. In Proceedings of ACM KDD 2011, pp. 618-626. doi: 10.1145/2020408.2020505&lt;/li&gt;
  &lt;li&gt;ChengXiang Zhai, Atulya Velivelli, and Bei Yu. A cross-collection mixture model for comparative text mining. In Proceedings of the 10th ACM SIGKDD international conference on knowledge discovery and data mining (KDD 2004). ACM, New York, NY, USA, 743-748. doi: 10.1145/1014052.1014150&lt;/li&gt;
  &lt;li&gt;Qiaozhu Mei, Contextual Text Mining, Ph.D. Thesis, University of Illinois at Urbana-Champaign, 2009.&lt;/li&gt;
  &lt;li&gt;Hyun Duk Kim, Malu Castellanos, Meichun Hsu, ChengXiang Zhai, Thomas Rietz, and Daniel Diermeier. Mining causal topics in text data: Iterative topic modeling with time series feedback. In Proceedings of the 22nd ACM international conference on information &amp;amp; knowledge management (CIKM 2013). ACM, New York, NY, USA, 885-890. doi: 10.1145/2505515.2505612&lt;/li&gt;
  &lt;li&gt;Noah Smith, Text-Driven Forecasting. Retrieved on May 31, 2015 from http://www.cs.cmu.edu/~nasmith/papers/smith.whitepaper10.pdf&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Text-based prediction&lt;/li&gt;
  &lt;li&gt;The “data mining loop”&lt;/li&gt;
  &lt;li&gt;Context (of text data) and contextual text mining&lt;/li&gt;
  &lt;li&gt;Contextual probabilistic latent semantic analysis (CPLSA): views of a topic and coverage of topics&lt;/li&gt;
  &lt;li&gt;Spatiotemporal trends of topics&lt;/li&gt;
  &lt;li&gt;Event impact analysis&lt;/li&gt;
  &lt;li&gt;Network-regularized topic modeling&lt;/li&gt;
  &lt;li&gt;NetPLSA&lt;/li&gt;
  &lt;li&gt;Causal topics&lt;/li&gt;
  &lt;li&gt;Iterative topic modeling with time series supervision&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;12-1-opinion-mining-and-sentiment-analysis&quot;&gt;12-1 Opinion Mining and Sentiment Analysis&lt;/h3&gt;

&lt;h4 id=&quot;12-1-1-latent-aspect-rating-analysis-part-1&quot;&gt;12-1-1 Latent Aspect Rating Analysis Part 1&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;12-1-2-latent-aspect-rating-analysis-part-2&quot;&gt;12-1-2 Latent Aspect Rating Analysis Part 2&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;12-2-text-based-prediction&quot;&gt;12-2 Text-Based Prediction&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;12-3-contextual-text-mining&quot;&gt;12-3 Contextual Text Mining&lt;/h3&gt;

&lt;h4 id=&quot;12-3-1-motivation&quot;&gt;12-3-1 Motivation&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;12-3-2-contextual-probabilistic-latent-semantic-analysis&quot;&gt;12-3-2 Contextual Probabilistic Latent Semantic Analysis&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;12-3-3-mining-topics-with-social-network-context&quot;&gt;12-3-3 Mining topics with social network context&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;12-3-4-mining-causal-topics-with-time-series-supervision&quot;&gt;12-3-4 Mining Causal Topics with Time Series Supervision&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-051.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;12-4-summary-for-exam-2&quot;&gt;12-4 Summary for Exam 2&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-052.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-053.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-054.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS410-wk12-img-055.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals&quot;&gt;Goals&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Know the internals of Distributed File Systems like NFS and AFS.&lt;/li&gt;
  &lt;li&gt;Know the internals of Distributed Shared Memory systems.&lt;/li&gt;
  &lt;li&gt;Know what’s inside a sensor mote and why networks of them are needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-concepts&quot;&gt;Key Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Distributed File Systems: Why they’re different from single-node file systems&lt;/li&gt;
  &lt;li&gt;Internals of NFS&lt;/li&gt;
  &lt;li&gt;Internals of AFS&lt;/li&gt;
  &lt;li&gt;Distributed Shared Memory: How processes can share memory pages while communicating via messages&lt;/li&gt;
  &lt;li&gt;Invalidate protocols in Distributed Shared Memory systems&lt;/li&gt;
  &lt;li&gt;Sensor networks: Why they’ve emerged, what’s inside them, where they’re used, and what are the challenges&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guiding-questions-1&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Why are Distributed File Systems stateless?&lt;/li&gt;
  &lt;li&gt;How does NFS provide transparency?&lt;/li&gt;
  &lt;li&gt;Why is whole file caching a reasonable approach in AFS?&lt;/li&gt;
  &lt;li&gt;When is invalidate preferable over update in Distributed Shared memory systems?&lt;/li&gt;
  &lt;li&gt;Why can’t embedded operating systems be used in sensor motes?&lt;/li&gt;
  &lt;li&gt;What is the disadvantage of using a spanning tree in sensor network, for aggregation?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;readings-and-resources&quot;&gt;Readings and Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;TinyOS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes-1&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;distributed-file-systems&quot;&gt;Distributed File Systems&lt;/h3&gt;

&lt;h4 id=&quot;file-system-abstraction&quot;&gt;File System Abstraction&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;nfs-and-afs&quot;&gt;NFS and AFS&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;distributed-shared-memory&quot;&gt;Distributed Shared Memory&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181122/CS425-wk12-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sensor-networks&quot;&gt;Sensor Networks&lt;/h3&gt;

&lt;h1 id=&quot;cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives-1&quot;&gt;Goals and Objectives&lt;/h2&gt;

&lt;h2 id=&quot;video-lecture-notes-2&quot;&gt;Video Lecture Notes&lt;/h2&gt;

</description>
				<pubDate>Thu, 22 Nov 2018 00:00:00 -0600</pubDate>
				<link>/2018/11/22/MCS-Notes-Week-12</link>
				<guid isPermaLink="true">/2018/11/22/MCS-Notes-Week-12</guid>
			</item>
		
			<item>
				<title>MCS 1st Semester Week 11 Notes</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#11-1-text-categorization&quot;&gt;11-1 Text Categorization&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#11-1-1-discriminative-classifier-part-1&quot;&gt;11-1-1 Discriminative Classifier Part 1&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#11-1-2-discriminative-classifier-part-2&quot;&gt;11-1-2 Discriminative Classifier Part 2&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#11-1-3-evaluation-part-1&quot;&gt;11-1-3 Evaluation Part 1&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#11-1-4-evaluation-part-2&quot;&gt;11-1-4 Evaluation Part 2&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#11-2-opinion-mining-and-sentiment-analysis&quot;&gt;11-2 Opinion Mining and Sentiment Analysis&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#11-2-1-motivation&quot;&gt;11-2-1 Motivation&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#11-2-2-sentiment-classification&quot;&gt;11-2-2 Sentiment Classification&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#11-2-3-ordinal-logistic-regression&quot;&gt;11-2-3 Ordinal Logistic Regression&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals&quot;&gt;Goals&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-concepts&quot;&gt;Key Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#readings-and-resources&quot;&gt;Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#stream-processing&quot;&gt;Stream Processing&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#distributed-graph-processing&quot;&gt;Distributed Graph Processing&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#structure-of-networks&quot;&gt;Structure of Networks&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#scheduling&quot;&gt;Scheduling&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#single-processor-scheduling&quot;&gt;Single-processor Scheduling&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#hadoop-scheduling&quot;&gt;Hadoop Scheduling&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#dominant-resource-fair-scheduling&quot;&gt;Dominant-resource Fair Scheduling&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives&quot;&gt;Goals and Objectives&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Explain the basic ideas of Logistic Regression, K-Nearest Neighbors (k-NN), and how K-NN works.&lt;/li&gt;
  &lt;li&gt;Explain how to evaluate categorization results.&lt;/li&gt;
  &lt;li&gt;Explain the tasks of opinion mining and sentiment analysis and why they are important tasks from an application perspective.&lt;/li&gt;
  &lt;li&gt;Explain how sentiment analysis can be done using text categorization techniques and why a straightforward application of regular text categorization techniques may not be adequate.&lt;/li&gt;
  &lt;li&gt;Give examples of both simple and complex features that are used for characterizing text data and explain how NLP can enable complex features to be generated from text.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guiding-questions&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;What’s the general idea of the logistic regression classifier? How is it related to Naïve Bayes? Under what conditions would logistic regression cover Naïve Bayes as a special case for two-category categorization?&lt;/li&gt;
  &lt;li&gt;What’s the general idea of the k-Nearest Neighbor classifier? How does it work?&lt;/li&gt;
  &lt;li&gt;How do we evaluate categorization results?&lt;/li&gt;
  &lt;li&gt;How do we compute classification accuracy, precision, recall, and F score?&lt;/li&gt;
  &lt;li&gt;Why is harmonic mean as used in F better than the arithmetic mean of precision and recall?&lt;/li&gt;
  &lt;li&gt;What’s the difference between macro and micro averaging?&lt;/li&gt;
  &lt;li&gt;Why is it sometimes interesting to frame a categorization problem as a ranking problem?&lt;/li&gt;
  &lt;li&gt;What is an opinion? How is it different from a factual statement?&lt;/li&gt;
  &lt;li&gt;What’s an opinion holder? What’s an opinion target?&lt;/li&gt;
  &lt;li&gt;What’s the goal of opinion mining?&lt;/li&gt;
  &lt;li&gt;What is sentiment analysis? How is it similar to and different from a text categorization task such as topic categorization?&lt;/li&gt;
  &lt;li&gt;Why are unigram features generally insufficient for accurate sentiment classification?&lt;/li&gt;
  &lt;li&gt;What’s the concern of using too many complex features such as frequent substructures of parse trees?&lt;/li&gt;
  &lt;li&gt;What are some commonly used features to represent text data?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;C. Zhai and S. Massung, Text Data Management and Analysis: A Practical Introduction to Information Retrieval and Text Mining. ACM and Morgan &amp;amp; Claypool Publishers, 2016. Chapters 15 &amp;amp; 18.&lt;/li&gt;
  &lt;li&gt;Yang, Yiming. An Evaluation of Statistical Approaches to Text Categorization. Inf. Retr. 1, 1-2 (May 1999), 69-90. doi: 10.1023/A:1009982220290&lt;/li&gt;
  &lt;li&gt;Bing Liu, Sentiment analysis and opinion mining. Morgan &amp;amp; Claypool Publishers, 2012.&lt;/li&gt;
  &lt;li&gt;Bo Pang and Lillian Lee, Opinion mining and sentiment analysis, Foundations and Trends in Information Retrieval 2(1-2), pp. 1–135, 2008.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Generative classifier vs. discriminative classifier&lt;/li&gt;
  &lt;li&gt;Training data&lt;/li&gt;
  &lt;li&gt;Logistic regression&lt;/li&gt;
  &lt;li&gt;K-Nearest Neighbor classifier&lt;/li&gt;
  &lt;li&gt;Classification accuracy, precision, recall, F measure, macro-averaging, and micro-averaging&lt;/li&gt;
  &lt;li&gt;Opinion holder, opinion target, sentiment, and opinion representation&lt;/li&gt;
  &lt;li&gt;Sentiment classification&lt;/li&gt;
  &lt;li&gt;Features, n-grams, frequent patterns, and overfitting&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;11-1-text-categorization&quot;&gt;11-1 Text Categorization&lt;/h3&gt;

&lt;h4 id=&quot;11-1-1-discriminative-classifier-part-1&quot;&gt;11-1-1 Discriminative Classifier Part 1&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;11-1-2-discriminative-classifier-part-2&quot;&gt;11-1-2 Discriminative Classifier Part 2&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;11-1-3-evaluation-part-1&quot;&gt;11-1-3 Evaluation Part 1&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;11-1-4-evaluation-part-2&quot;&gt;11-1-4 Evaluation Part 2&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;11-2-opinion-mining-and-sentiment-analysis&quot;&gt;11-2 Opinion Mining and Sentiment Analysis&lt;/h3&gt;

&lt;h4 id=&quot;11-2-1-motivation&quot;&gt;11-2-1 Motivation&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;11-2-2-sentiment-classification&quot;&gt;11-2-2 Sentiment Classification&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-051.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-052.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-053.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-054.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-055.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-056.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-057.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-058.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-059.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;11-2-3-ordinal-logistic-regression&quot;&gt;11-2-3 Ordinal Logistic Regression&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-060.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-061.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-062.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-063.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-064.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-065.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS410-wk11-img-066.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals&quot;&gt;Goals&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Apply classical scheduling algorithms.&lt;/li&gt;
  &lt;li&gt;Apply popular Hadoop scheduling algorithms.&lt;/li&gt;
  &lt;li&gt;Know the internals of Apache Storm, a stream processing engine.&lt;/li&gt;
  &lt;li&gt;Know how enormous graphs can be processed in clouds.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-concepts&quot;&gt;Key Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Classical Scheduling algorithms, including FIFO, Shortest Task First, and Round Robin&lt;/li&gt;
  &lt;li&gt;Popular Hadoop schedulers including Capacity Scheduler and Fair Scheduler&lt;/li&gt;
  &lt;li&gt;Internals of Apache Storm, a stream processing engine&lt;/li&gt;
  &lt;li&gt;Internals of distributed graph processing engines, e.g., Google’s Pregel&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guiding-questions-1&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Why is shortest-task-first optimal?&lt;/li&gt;
  &lt;li&gt;What is the difference between the Capacity and Fair schedulers in Hadoop?&lt;/li&gt;
  &lt;li&gt;What is a Storm topology?&lt;/li&gt;
  &lt;li&gt;What is Gather-Apply-Scatter paradigm in distributed graph processing?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;readings-and-resources&quot;&gt;Readings and Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://storm.apache.org/&quot;&gt;Apache Storm&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://www.eecs.berkeley.edu/Pubs/TechRpts/2012/EECS-2012-259.pdf&quot;&gt;Optional: Spark Streaming&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://dl.acm.org/citation.cfm?id=1807184&quot;&gt;Pregel&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;video-lecture-notes-1&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;stream-processing&quot;&gt;Stream Processing&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;distributed-graph-processing&quot;&gt;Distributed Graph Processing&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;structure-of-networks&quot;&gt;Structure of Networks&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;scheduling&quot;&gt;Scheduling&lt;/h3&gt;

&lt;h4 id=&quot;single-processor-scheduling&quot;&gt;Single-processor Scheduling&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-051.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-052.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-053.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-054.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-055.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-056.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;hadoop-scheduling&quot;&gt;Hadoop Scheduling&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-057.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-058.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-059.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-060.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-061.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-062.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-063.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-064.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-065.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-066.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-067.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;dominant-resource-fair-scheduling&quot;&gt;Dominant-resource Fair Scheduling&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-068.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-069.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-070.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-071.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-072.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-073.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-074.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-075.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-076.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181121/CS425-wk11-img-077.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives-1&quot;&gt;Goals and Objectives&lt;/h2&gt;

&lt;h2 id=&quot;video-lecture-notes-2&quot;&gt;Video Lecture Notes&lt;/h2&gt;

</description>
				<pubDate>Wed, 21 Nov 2018 00:00:00 -0600</pubDate>
				<link>/2018/11/21/MCS-Notes-Week-11</link>
				<guid isPermaLink="true">/2018/11/21/MCS-Notes-Week-11</guid>
			</item>
		
			<item>
				<title>MCS 1st Semester Week 10 Notes</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#10-1-text-clustering&quot;&gt;10-1 Text Clustering&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#10-1-1-motivation&quot;&gt;10-1-1 Motivation&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#10-1-2-generative-probabilistic-models-part-1&quot;&gt;10-1-2 Generative Probabilistic Models Part 1&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#10-1-3-generative-probabilistic-models-part-2&quot;&gt;10-1-3 Generative Probabilistic Models Part 2&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#10-1-4-generative-probabilistic-models-part-3&quot;&gt;10-1-4 Generative Probabilistic Models Part 3&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#10-1-5-similiarity-based-approaches&quot;&gt;10-1-5 Similiarity Based Approaches&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#10-1-6-evaluation&quot;&gt;10-1-6 Evaluation&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#10-2-text-categorization&quot;&gt;10-2 Text Categorization&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#10-2-1-motivation&quot;&gt;10-2-1 Motivation&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#10-2-2-methods&quot;&gt;10-2-2 Methods&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#10-2-3-generative-probabilistic-models&quot;&gt;10-2-3 Generative Probabilistic Models&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals&quot;&gt;Goals&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-concepts&quot;&gt;Key Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#readings-and-resources&quot;&gt;Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#concurrency-control&quot;&gt;Concurrency Control&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#rpcs&quot;&gt;RPCs&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#transactions&quot;&gt;Transactions&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#serial-equivalence&quot;&gt;Serial Equivalence&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#pessimistic-concurrency&quot;&gt;Pessimistic Concurrency&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#optimistic-concurrency-control&quot;&gt;Optimistic Concurrency Control&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#replication-control&quot;&gt;Replication Control&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#replication&quot;&gt;Replication&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#two-phase-commit&quot;&gt;Two-Phase Commit&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#junit&quot;&gt;JUnit&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#unit-testing&quot;&gt;Unit Testing&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#junit-overview&quot;&gt;Junit Overview&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#junit-assertions&quot;&gt;JUnit Assertions&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#junit-assumptions&quot;&gt;JUnit Assumptions&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#parameterized-tests&quot;&gt;Parameterized Tests&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#basics&quot;&gt;Basics&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#complex-parameters&quot;&gt;Complex Parameters&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#writing-parameterized-tests&quot;&gt;Writing Parameterized Tests&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#test-generalization&quot;&gt;Test Generalization&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives&quot;&gt;Goals and Objectives&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Explain the concept of text clustering and why it is useful.&lt;/li&gt;
  &lt;li&gt;Explain how Hierarchical Agglomerative Clustering and k-Means clustering work.&lt;/li&gt;
  &lt;li&gt;Explain how to evaluate text clustering.&lt;/li&gt;
  &lt;li&gt;Explain the concept of text categorization and why it is useful.&lt;/li&gt;
  &lt;li&gt;Explain how Naïve Bayes classifier works.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guiding-questions&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;What is clustering? What are some applications of clustering in text mining and analysis?&lt;/li&gt;
  &lt;li&gt;How does hierarchical agglomerative clustering work? How do single-link, complete-link, and average-link work for computing group similarity? Which of these three ways of computing group similarity is least sensitive to outliers in the data?&lt;/li&gt;
  &lt;li&gt;How do we evaluate clustering results?&lt;/li&gt;
  &lt;li&gt;What is text categorization? What are some applications of text categorization?&lt;/li&gt;
  &lt;li&gt;What does the training data for categorization look like?&lt;/li&gt;
  &lt;li&gt;How does the Naïve Bayes classifier work?&lt;/li&gt;
  &lt;li&gt;Why do we often use logarithm in the scoring function for Naïve Bayes?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;C. Zhai and S. Massung, Text Data Management and Analysis: A Practical Introduction to Information Retrieval and Text Mining. ACM and Morgan &amp;amp; Claypool Publishers, 2016. Chapters 14 &amp;amp; 15.&lt;/li&gt;
  &lt;li&gt;Manning, Chris D., Prabhakar Raghavan, and Hinrich Schütze. Introduction to Information Retrieval. Cambridge: Cambridge University Press, 2007. Chapters 13-16.&lt;/li&gt;
  &lt;li&gt;Yang, Yiming. An Evaluation of Statistical Approaches to Text Categorization. Inf. Retr. 1, 1-2 (May 1999), 69-90. doi: 10.1023/A:1009982220290&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Clustering, document clustering, and term clustering&lt;/li&gt;
  &lt;li&gt;Clustering bias&lt;/li&gt;
  &lt;li&gt;Perspective of similarity&lt;/li&gt;
  &lt;li&gt;Hierarchical Agglomerative Clustering, and k-Means&lt;/li&gt;
  &lt;li&gt;Direction evaluation (of clustering), indirect evaluation (of clustering)&lt;/li&gt;
  &lt;li&gt;Text categorization, topic categorization, sentiment categorization, email routing&lt;/li&gt;
  &lt;li&gt;Spam filtering&lt;/li&gt;
  &lt;li&gt;Naïve Bayes classifier&lt;/li&gt;
  &lt;li&gt;Smoothing&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;10-1-text-clustering&quot;&gt;10-1 Text Clustering&lt;/h3&gt;

&lt;h4 id=&quot;10-1-1-motivation&quot;&gt;10-1-1 Motivation&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;10-1-2-generative-probabilistic-models-part-1&quot;&gt;10-1-2 Generative Probabilistic Models Part 1&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;differences between mixture and topic model:
    &lt;ul&gt;
      &lt;li&gt;choice of using a distribution is made once in mixture model , but made multiple times in topic model&lt;/li&gt;
      &lt;li&gt;document clustering has word distribution used to regenerate all the words for a document, But, in the case of one distribution doesn’t have to generate all the words in the document. Multiple distribution could have been used to generate the words in the document.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;10-1-3-generative-probabilistic-models-part-2&quot;&gt;10-1-3 Generative Probabilistic Models Part 2&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;10-1-4-generative-probabilistic-models-part-3&quot;&gt;10-1-4 Generative Probabilistic Models Part 3&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;10-1-5-similiarity-based-approaches&quot;&gt;10-1-5 Similiarity Based Approaches&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;10-1-6-evaluation&quot;&gt;10-1-6 Evaluation&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;10-2-text-categorization&quot;&gt;10-2 Text Categorization&lt;/h3&gt;

&lt;h4 id=&quot;10-2-1-motivation&quot;&gt;10-2-1 Motivation&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-051.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-052.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;10-2-2-methods&quot;&gt;10-2-2 Methods&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-053.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-054.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-055.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-056.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-057.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-058.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-059.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-060.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;10-2-3-generative-probabilistic-models&quot;&gt;10-2-3 Generative Probabilistic Models&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-061.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-062.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-063.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-064.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-065.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-066.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS410-wk10-img-067.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals&quot;&gt;Goals&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Know how Remote Procedure Calls (RPCs) work.&lt;/li&gt;
  &lt;li&gt;Check a run of transactions for correctness (serial equivalence).&lt;/li&gt;
  &lt;li&gt;Design systems that use optimistic or pessimistic approaches to ensure correctness in spite of many concurrent clients.&lt;/li&gt;
  &lt;li&gt;Detect and avoid deadlocks.&lt;/li&gt;
  &lt;li&gt;Calculate nines availability for a replicated system.&lt;/li&gt;
  &lt;li&gt;Know how to ensure correctness (consistency) in spite of multiple servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-concepts&quot;&gt;Key Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;LPCs vs RPCs&lt;/li&gt;
  &lt;li&gt;Marshaling&lt;/li&gt;
  &lt;li&gt;Serial Equivalence&lt;/li&gt;
  &lt;li&gt;Pessimistic Concurrency Control&lt;/li&gt;
  &lt;li&gt;Optimistic Concurrency Control&lt;/li&gt;
  &lt;li&gt;Deadlocks and their detection/avoidance/prevention&lt;/li&gt;
  &lt;li&gt;ACID Properties&lt;/li&gt;
  &lt;li&gt;Nines Availability&lt;/li&gt;
  &lt;li&gt;Active and Passive Replication&lt;/li&gt;
  &lt;li&gt;Two-phase commit&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guiding-questions-1&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Does an RPC always cross machine boundaries?&lt;/li&gt;
  &lt;li&gt;Why is marshaling needed at all?&lt;/li&gt;
  &lt;li&gt;What are conflicting operations and how can you use them to detect serial equivalence among transactions?&lt;/li&gt;
  &lt;li&gt;Is locking a form of pessimistic or optimistic concurrency control?&lt;/li&gt;
  &lt;li&gt;Does Google docs use pessimistic or optimistic concurrency control?&lt;/li&gt;
  &lt;li&gt;What is one way to prevent deadlocks among transactions?&lt;/li&gt;
  &lt;li&gt;What does “three nines availability” really mean?&lt;/li&gt;
  &lt;li&gt;Why is Two-phase commit preferable over One-phase commit?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;readings-and-resources&quot;&gt;Readings and Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;There are no readings required for this week.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes-1&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;concurrency-control&quot;&gt;Concurrency Control&lt;/h3&gt;

&lt;h4 id=&quot;rpcs&quot;&gt;RPCs&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;transactions&quot;&gt;Transactions&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;serial-equivalence&quot;&gt;Serial Equivalence&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;pessimistic-concurrency&quot;&gt;Pessimistic Concurrency&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;optimistic-concurrency-control&quot;&gt;Optimistic Concurrency Control&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-051.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-052.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-053.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;replication-control&quot;&gt;Replication Control&lt;/h3&gt;

&lt;h4 id=&quot;replication&quot;&gt;Replication&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-054.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-055.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-056.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-057.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-058.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-059.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-060.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-061.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-062.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-063.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-064.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS425-wk10-img-065.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;two-phase-commit&quot;&gt;Two-Phase Commit&lt;/h4&gt;

&lt;h1 id=&quot;cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives-1&quot;&gt;Goals and Objectives&lt;/h2&gt;

&lt;h2 id=&quot;video-lecture-notes-2&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;junit&quot;&gt;JUnit&lt;/h3&gt;

&lt;h4 id=&quot;unit-testing&quot;&gt;Unit Testing&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;junit-overview&quot;&gt;Junit Overview&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;junit-assertions&quot;&gt;JUnit Assertions&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;junit-assumptions&quot;&gt;JUnit Assumptions&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;parameterized-tests&quot;&gt;Parameterized Tests&lt;/h3&gt;

&lt;h4 id=&quot;basics&quot;&gt;Basics&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;complex-parameters&quot;&gt;Complex Parameters&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;writing-parameterized-tests&quot;&gt;Writing Parameterized Tests&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-051.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-052.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;test-generalization&quot;&gt;Test Generalization&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-053.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-054.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-055.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-056.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-057.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-058.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-059.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-060.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181112/CS427-wk10-img-061.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

</description>
				<pubDate>Mon, 12 Nov 2018 00:00:00 -0600</pubDate>
				<link>/2018/11/12/MCS-Notes-Week-10</link>
				<guid isPermaLink="true">/2018/11/12/MCS-Notes-Week-10</guid>
			</item>
		
			<item>
				<title>MCS 1st Semester Week 9 Notes</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#9-1-probabalistic-topic-models&quot;&gt;9-1 Probabalistic Topic Models&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#9-1-1-mixture-of-unigram-language-models&quot;&gt;9-1-1 Mixture of Unigram Language Models&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#9-1-2-mixture-model-estimation-part-1&quot;&gt;9-1-2 Mixture Model Estimation Part 1&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#9-1-3-mixture-model-estimation-part-2&quot;&gt;9-1-3 Mixture Model Estimation Part 2&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#9-1-4-expectation-maximization-algorithm-part-1&quot;&gt;9-1-4 Expectation Maximization Algorithm Part 1&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#9-1-5-expectation-maximization-algorithm-part-2&quot;&gt;9-1-5 Expectation Maximization Algorithm Part 2&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#9-1-6-expectation-maximization-algorithm-part-3&quot;&gt;9-1-6 Expectation Maximization Algorithm Part 3&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-2-probabalistic-latent-semantic-analysis-plsa-part-1&quot;&gt;9-2 Probabalistic Latent Semantic Analysis PLSA Part 1&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-3-probabalistic-latent-semantic-analysis-plsa-part-2&quot;&gt;9-3 Probabalistic Latent Semantic Analysis PLSA Part 2&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-4-latent-dirichet-allocation-lda-part-1&quot;&gt;9-4 Latent Dirichet Allocation LDA Part 1&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-5-latent-dirichet-allocation-lda-part-2&quot;&gt;9-5 Latent Dirichet Allocation LDA Part 2&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals&quot;&gt;Goals&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-concepts&quot;&gt;Key Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#readings-and-resources&quot;&gt;Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#9-1-1-the-election-problem&quot;&gt;9-1-1 The Election Problem&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-1-2-ring-leader-election&quot;&gt;9-1-2 Ring Leader Election&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-1-3-election-in-chubby&quot;&gt;9-1-3 Election in Chubby&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-1-4-bully-algorithm&quot;&gt;9-1-4 Bully Algorithm&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-2-1-introduction-and-basics&quot;&gt;9-2-1 Introduction and Basics&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-2-2-distributed-mutual-exclusion&quot;&gt;9-2-2 Distributed Mutual Exclusion&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-2-3-ricart-agrawalas-algorithm&quot;&gt;9-2-3 Ricart Agrawalas Algorithm&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-2-4-maekawas-algorithm-and-wrapup&quot;&gt;9-2-4 Maekawas Algorithm and WrapUp&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#9-6-1-testing-overview&quot;&gt;9-6-1 Testing Overview&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-6-2-test-cases&quot;&gt;9-6-2 Test Cases&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-6-3-testing-activities&quot;&gt;9-6-3 Testing Activities&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-6-4-relating-fault-and-failure&quot;&gt;9-6-4 Relating Fault and Failure&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-6-5-black-box-testing&quot;&gt;9-6-5 Black Box Testing&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-6-6-white-box-testing&quot;&gt;9-6-6 White Box Testing&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#9-6-7-code-coverage&quot;&gt;9-6-7 Code Coverage&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives&quot;&gt;Goals and Objectives&lt;/h2&gt;
&lt;p&gt;Explain what a mixture of unigram language model is and why using a background language in a mixture can help “absorb” common words in English.&lt;br /&gt;
Explain what PLSA is and how it can be used to mine and analyze topics in text.&lt;br /&gt;
Explain the general idea of using a generative model for text mining.&lt;br /&gt;
Explain how to compute the probability of observing a word from a mixture model like PLSA.&lt;br /&gt;
Explain the basic idea of the EM algorithm and how it works.&lt;br /&gt;
Explain the main difference between LDA and PLSA.&lt;/p&gt;

&lt;h2 id=&quot;guiding-questions&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;p&gt;What is a mixture model? In general, how do you compute the probability of observing a particular word from a mixture model? What is the general form of the expression for this probability?&lt;br /&gt;
What does the maximum likelihood estimate of the component word distributions of a mixture model behave like? In what sense do they “collaborate” and/or “compete”? Why can we use a fixed background word distribution to force a discovered topic word distribution to reduce its probability on the common (often non-content) words?&lt;br /&gt;
What is the basic idea of the EM algorithm? What does the E-step typically do? What does the M-step typically do? In which of the two steps do we typically apply the Bayes rule? Does EM converge to a global maximum?&lt;br /&gt;
What is PLSA? How many parameters does a PLSA model have? How is this number affected by the size of our data set to be mined? How can we adjust the standard PLSA to incorporate a prior on a topic word distribution?&lt;br /&gt;
How is LDA different from PLSA? What is shared by the two models?&lt;/p&gt;

&lt;h2 id=&quot;additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/h2&gt;
&lt;p&gt;C. Zhai and S. Massung, Text Data Management and Analysis: A Practical Introduction to Information Retrieval and Text Mining. ACM and Morgan &amp;amp; Claypool Publishers, 2016. Chapter 17.&lt;br /&gt;
Blei, D. 2012. Probabilistic Topic Models. Communications of the ACM 55 (4): 77–84. doi: 10.1145/2133806.2133826.&lt;br /&gt;
Qiaozhu Mei, Xuehua Shen, and ChengXiang Zhai. Automatic Labeling of Multinomial Topic Models. Proceedings of ACM KDD 2007, pp. 490-499, DOI=10.1145/1281192.1281246.&lt;br /&gt;
Yue Lu, Qiaozhu Mei, and Chengxiang Zhai. 2011. Investigating task performance of probabilistic topic models: an empirical study of PLSA and LDA. Information Retrieval, 14, 2 (April 2011), 178-203. doi: 10.1007/s10791-010-9141-9.&lt;/p&gt;

&lt;h2 id=&quot;key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/h2&gt;
&lt;p&gt;Mixture model&lt;br /&gt;
Component model&lt;br /&gt;
Constraints on probabilities&lt;br /&gt;
Probabilistic Latent Semantic Analysis (PLSA)&lt;br /&gt;
Expectation-Maximization (EM) algorithm&lt;br /&gt;
E-step and M-step&lt;br /&gt;
Hidden variables&lt;br /&gt;
Hill climbing&lt;br /&gt;
Local maximum&lt;br /&gt;
Latent Dirichlet Allocation (LDA)&lt;/p&gt;

&lt;h2 id=&quot;video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;9-1-probabalistic-topic-models&quot;&gt;9-1 Probabalistic Topic Models&lt;/h3&gt;

&lt;h4 id=&quot;9-1-1-mixture-of-unigram-language-models&quot;&gt;9-1-1 Mixture of Unigram Language Models&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;9-1-2-mixture-model-estimation-part-1&quot;&gt;9-1-2 Mixture Model Estimation Part 1&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;9-1-3-mixture-model-estimation-part-2&quot;&gt;9-1-3 Mixture Model Estimation Part 2&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;9-1-4-expectation-maximization-algorithm-part-1&quot;&gt;9-1-4 Expectation Maximization Algorithm Part 1&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;9-1-5-expectation-maximization-algorithm-part-2&quot;&gt;9-1-5 Expectation Maximization Algorithm Part 2&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;9-1-6-expectation-maximization-algorithm-part-3&quot;&gt;9-1-6 Expectation Maximization Algorithm Part 3&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-2-probabalistic-latent-semantic-analysis-plsa-part-1&quot;&gt;9-2 Probabalistic Latent Semantic Analysis PLSA Part 1&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-3-probabalistic-latent-semantic-analysis-plsa-part-2&quot;&gt;9-3 Probabalistic Latent Semantic Analysis PLSA Part 2&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-4-latent-dirichet-allocation-lda-part-1&quot;&gt;9-4 Latent Dirichet Allocation LDA Part 1&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-051.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-052.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-053.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-054.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-055.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-5-latent-dirichet-allocation-lda-part-2&quot;&gt;9-5 Latent Dirichet Allocation LDA Part 2&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-056.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-057.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-058.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-059.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-060.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-061.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-062.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-063.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-064.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS410-wk9-img-065.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals&quot;&gt;Goals&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Design Leader Election algorithms including Ring algorithm and Bully algorithm.&lt;/li&gt;
  &lt;li&gt;Design Mutual Exclusion algorithms including Ricart-Agrawala’s algorithm and Maekawa’s algorithm.&lt;/li&gt;
  &lt;li&gt;Know the design of Leader Election used in industry systems: Google’s Chubby system and Apache Zookeeper.&lt;/li&gt;
  &lt;li&gt;Know how industry systems like Google’s Chubby support mutual exclusion.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-concepts&quot;&gt;Key Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Google Chubby Leader Election&lt;/li&gt;
  &lt;li&gt;Apache Zookeeper Leader Election&lt;/li&gt;
  &lt;li&gt;Ring Mutual Exclusion&lt;/li&gt;
  &lt;li&gt;Ricart-Agrawala’s Mutual Exclusion&lt;/li&gt;
  &lt;li&gt;Maekawa Mutual Exclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guiding-questions-1&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;What are the safety and liveness conditions for Leader Election?&lt;/li&gt;
  &lt;li&gt;Why is Leader Election hard?&lt;/li&gt;
  &lt;li&gt;How long does the Ring Election algorithm take to complete?&lt;/li&gt;
  &lt;li&gt;How long does the Bully Election algorithm take to complete?&lt;/li&gt;
  &lt;li&gt;How does Google Chubby use quorums for election?&lt;/li&gt;
  &lt;li&gt;What are the safety and liveness conditions for Mutual Exclusion?&lt;/li&gt;
  &lt;li&gt;How do semaphores work?&lt;/li&gt;
  &lt;li&gt;How long does the Ring Mutual Exclusion algorithm take to complete?&lt;/li&gt;
  &lt;li&gt;How long does the Ricart-Agrawala’s algorithm take to complete?&lt;/li&gt;
  &lt;li&gt;Why is Maekawa’s algorithm “optimal”?&lt;/li&gt;
  &lt;li&gt;How does Google Chubby use quorums for mutual exclusion?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;readings-and-resources&quot;&gt;Readings and Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;(Optional, fun video) &lt;a href=&quot;http://aws.amazon.com/training/intro_series/&quot;&gt;Amazon Web Services (AWS) Training Videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes-1&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;9-1-1-the-election-problem&quot;&gt;9-1-1 The Election Problem&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-1.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-2.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-3.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-4.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-5.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-6.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-7.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-1-2-ring-leader-election&quot;&gt;9-1-2 Ring Leader Election&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-8.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-9.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-10.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-11.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-12.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-13.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-14.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-15.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-16.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-17.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-18.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-19.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-20.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-21.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-22.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-23.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-24.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-1-3-election-in-chubby&quot;&gt;9-1-3 Election in Chubby&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-25.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-26.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-27.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-28.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-29.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-30.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-31.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-32.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-33.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-34.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-35.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-36.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-1-4-bully-algorithm&quot;&gt;9-1-4 Bully Algorithm&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-37.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-38.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-39.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-40.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-41.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-42.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-43.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-44.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-45.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-46.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-47.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-48.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-2-1-introduction-and-basics&quot;&gt;9-2-1 Introduction and Basics&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-49.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-50.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-51.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-52.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-53.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-54.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-55.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-56.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-57.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-58.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-2-2-distributed-mutual-exclusion&quot;&gt;9-2-2 Distributed Mutual Exclusion&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-59.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-60.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-61.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-62.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-63.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-64.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-65.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-66.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-67.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-68.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-69.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-70.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-71.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-72.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-2-3-ricart-agrawalas-algorithm&quot;&gt;9-2-3 Ricart Agrawalas Algorithm&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-73.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-74.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-75.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-76.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-77.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-78.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-79.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-80.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-81.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-82.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-83.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-2-4-maekawas-algorithm-and-wrapup&quot;&gt;9-2-4 Maekawas Algorithm and WrapUp&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-84.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-85.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-86.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-87.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-88.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-89.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-90.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-91.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-92.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-93.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-94.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-95.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-96.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-97.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-98.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS425-wk9-img-99.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives-1&quot;&gt;Goals and Objectives&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Explain what is validation and verification, respectively.&lt;/li&gt;
  &lt;li&gt;Classify a given activity into validation or verification.&lt;/li&gt;
  &lt;li&gt;Explain why conduct testing, who write tests, when to write tests, and when to run tests, respectively&lt;/li&gt;
  &lt;li&gt;Explain what a test case consists of&lt;/li&gt;
  &lt;li&gt;Explain when to use automated tests in contrast to manual tests, and when to use manual tests in contrast to automated tests.&lt;/li&gt;
  &lt;li&gt;Explain the purpose of the given kind of tests.&lt;/li&gt;
  &lt;li&gt;List the four types of testing activities, and explain their differences&lt;/li&gt;
  &lt;li&gt;List the type of knowledge needed by each of the four types of testing activities&lt;/li&gt;
  &lt;li&gt;Explain the differences between mistake, fault, erroro, and failure.&lt;/li&gt;
  &lt;li&gt;Classify a given case into mistake, fault, error, or failure&lt;/li&gt;
  &lt;li&gt;Explain the three conditions illustrated in the PIE model&lt;/li&gt;
  &lt;li&gt;Use the PIE model to explain why covering every statement in the software under test is necessary&lt;/li&gt;
  &lt;li&gt;Use the PIE model to explain why even covering every statement in the software under test is not sufficient.&lt;/li&gt;
  &lt;li&gt;Conduct equivalence partitioning given requirements&lt;/li&gt;
  &lt;li&gt;Conduct boundary value analysis given requirements&lt;/li&gt;
  &lt;li&gt;Conduct black-box testing given a program under test.&lt;/li&gt;
  &lt;li&gt;Explain the type of faults that black-box testing is good at detecting while white-box testing is not.&lt;/li&gt;
  &lt;li&gt;Explain the type of faults that white-box testing is good at detecting while black-box testing is not.&lt;/li&gt;
  &lt;li&gt;Explain differences between the given major types of code coverage&lt;/li&gt;
  &lt;li&gt;Measure code coverage of the given program under test by the given test input values with respect to the given type of code coverage&lt;/li&gt;
  &lt;li&gt;Generate test input values to achieve 100% coverage of the given program under test with respect to the given type of code coverage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes-2&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;9-6-1-testing-overview&quot;&gt;9-6-1 Testing Overview&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Can write tests pretty much at any point in the Waterfall design cycle.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-1.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-2.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-3.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-4.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-6-2-test-cases&quot;&gt;9-6-2 Test Cases&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-5.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-6.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-7.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-8.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-9.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-10.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-11.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-6-3-testing-activities&quot;&gt;9-6-3 Testing Activities&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-12.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-13.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-6-4-relating-fault-and-failure&quot;&gt;9-6-4 Relating Fault and Failure&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-14.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-15.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-16.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-17.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fault: erroneous piece of code&lt;/li&gt;
  &lt;li&gt;Error: an unexpected result/output of code&lt;/li&gt;
  &lt;li&gt;Failure: crashes that occur as a result of bad code.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.odu.edu/~mln/ltrs-pdfs/NASA-92-ieeeswe.jmv.pdf&quot;&gt;see here for paper on PIE…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;9-6-5-black-box-testing&quot;&gt;9-6-5 Black Box Testing&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-18.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-19.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-20.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-21.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-22.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-23.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-24.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-25.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-6-6-white-box-testing&quot;&gt;9-6-6 White Box Testing&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-26.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-27.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-28.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;9-6-7-code-coverage&quot;&gt;9-6-7 Code Coverage&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-29.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-30.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-31.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-32.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-33.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-34.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-35.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-36.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181105/CS427-wk9-img-37.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 05 Nov 2018 00:00:00 -0600</pubDate>
				<link>/2018/11/05/MCS-Notes-Week-9</link>
				<guid isPermaLink="true">/2018/11/05/MCS-Notes-Week-9</guid>
			</item>
		
			<item>
				<title>MCS 1st Semester Week 8 Notes</title>
				<description>&lt;!-- vim-markdown-toc Redcarpet --&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#guiding-questions&quot;&gt;Guiding Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#8-1-syntagmatic-relation-discovery&quot;&gt;8-1 Syntagmatic Relation Discovery&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#8-1-1-entropy&quot;&gt;8-1-1 Entropy&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#8-1-2-conditional-entropy&quot;&gt;8-1-2 Conditional Entropy&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#8-1-3-mutual-information-part-1&quot;&gt;8-1-3 Mutual Information Part 1&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#8-1-4-mutual-information-part-2&quot;&gt;8-1-4 Mutual Information Part 2&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#8-2-topic-mining-and-analysis&quot;&gt;8-2 Topic Mining and Analysis&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#8-2-1-motivation-and-task-definition&quot;&gt;8-2-1 Motivation and Task Definition&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#8-2-2-term-as-topic&quot;&gt;8-2-2 Term as Topic&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#8-2-3-probabalistic-topic-models&quot;&gt;8-2-3 Probabalistic Topic Models&lt;/a&gt;
                &lt;ul&gt;
                  &lt;li&gt;&lt;a href=&quot;#8-2-3-1-overview-of-statistical-language-models-part-1&quot;&gt;8-2-3-1 Overview of Statistical Language Models Part 1&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;#8-2-3-2-overview-of-statistical-language-models-part-2&quot;&gt;8-2-3-2 Overview of Statistical Language Models Part 2&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;#8-2-3-3-mining-one-topic&quot;&gt;8-2-3-3 Mining One Topic&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#goals-and-objectives&quot;&gt;Goals and Objectives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#5-7-design-pattern&quot;&gt;5-7 Design Pattern&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#5-8-observer-pattern&quot;&gt;5-8 Observer Pattern&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#5-9-composite-pattern&quot;&gt;5-9 Composite Pattern&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- vim-markdown-toc --&gt;

&lt;h1 id=&quot;cs-410-text-information-systems&quot;&gt;CS 410 Text Information Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;(under constructior construction)&lt;/p&gt;

&lt;h2 id=&quot;goals-and-objectives&quot;&gt;Goals and Objectives&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Explain some basic concepts in natural language processing and text information access.&lt;/li&gt;
  &lt;li&gt;Explain why text retrieval is often defined as a ranking problem.&lt;/li&gt;
  &lt;li&gt;Explain the basic idea of the vector space retrieval model and how to instantiate it with the simplest bit-vector representation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guiding-questions&quot;&gt;Guiding Questions&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;What is entropy? For what kind of random variables does the entropy function reach its minimum and maximum, respectively?&lt;/li&gt;
  &lt;li&gt;What is conditional entropy?&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;What is the relation between conditional entropy H(X&lt;/td&gt;
          &lt;td&gt;Y) and entropy H(X)? Which is larger?&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;How can conditional entropy be used for discovering syntagmatic relations?&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;What is mutual information I(X;Y)? How is it related to entropy H(X) and conditional entropy H(X&lt;/td&gt;
          &lt;td&gt;Y)?&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;What’s the minimum value of I(X;Y)? Is it symmetric?&lt;/li&gt;
  &lt;li&gt;For what kind of X and Y, does mutual information I(X;Y) reach its minimum? For a given X, for what Y does I(X;Y) reach its maximum?&lt;/li&gt;
  &lt;li&gt;Why is mutual information sometimes more useful for discovering syntagmatic relations than conditional entropy?&lt;/li&gt;
  &lt;li&gt;What is a topic?&lt;/li&gt;
  &lt;li&gt;How can we define the task of topic mining and analysis computationally? What’s the input? What’s the output?&lt;/li&gt;
  &lt;li&gt;How can we heuristically solve the problem of topic mining and analysis by treating a term as a topic? What are the main problems of such an approach?&lt;/li&gt;
  &lt;li&gt;What are the benefits of representing a topic by a word distribution?&lt;/li&gt;
  &lt;li&gt;What is a statistical language model? What is a unigram language model? How can we compute the probability of a sequence of words given a unigram language model?&lt;/li&gt;
  &lt;li&gt;What is Maximum Likelihood estimate of a unigram language model given a text article?&lt;/li&gt;
  &lt;li&gt;What is the basic idea of Bayesian estimation? What is a prior distribution? What is a posterior distribution? How are they related with each other? What is Bayes rule?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;additional-readings-and-resources&quot;&gt;Additional Readings and Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;C. Zhai and S. Massung. Text Data Management and Analysis: A Practical Introduction to Information Retrieval and Text Mining, ACM and Morgan &amp;amp; Claypool Publishers, 2016. Chapters 13, 17.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-phrases-and-concepts&quot;&gt;Key Phrases and Concepts&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Entropy&lt;/li&gt;
  &lt;li&gt;Conditional entropy&lt;/li&gt;
  &lt;li&gt;Mutual information&lt;/li&gt;
  &lt;li&gt;Topic and coverage of topic&lt;/li&gt;
  &lt;li&gt;Language model&lt;/li&gt;
  &lt;li&gt;Generative model&lt;/li&gt;
  &lt;li&gt;Unigram language model&lt;/li&gt;
  &lt;li&gt;Word distribution&lt;/li&gt;
  &lt;li&gt;Background language model&lt;/li&gt;
  &lt;li&gt;Parameters of a probabilistic model&lt;/li&gt;
  &lt;li&gt;Likelihood&lt;/li&gt;
  &lt;li&gt;Bayes rule&lt;/li&gt;
  &lt;li&gt;Maximum likelihood estimation&lt;/li&gt;
  &lt;li&gt;Prior and posterior distributions&lt;/li&gt;
  &lt;li&gt;Bayesian estimation &amp;amp; inference&lt;/li&gt;
  &lt;li&gt;Maximum a posteriori (MAP) estimate&lt;/li&gt;
  &lt;li&gt;Prior model&lt;/li&gt;
  &lt;li&gt;Posterior mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-000.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;8-1-syntagmatic-relation-discovery&quot;&gt;8-1 Syntagmatic Relation Discovery&lt;/h3&gt;

&lt;h4 id=&quot;8-1-1-entropy&quot;&gt;8-1-1 Entropy&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-001.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-002.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-003.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-004.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-005.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-006.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;8-1-2-conditional-entropy&quot;&gt;8-1-2 Conditional Entropy&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Entropy of a word being present is minimum when given exact word is present (ie 0)&lt;/li&gt;
  &lt;li&gt;Entropy of a word being present is maximum when given unrelated word is present (ie, H(Xword))&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-007.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-008.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-009.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-010.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-011.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;8-1-3-mutual-information-part-1&quot;&gt;8-1-3 Mutual Information Part 1&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-012.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-013.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-014.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-015.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-016.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-017.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-018.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;8-1-4-mutual-information-part-2&quot;&gt;8-1-4 Mutual Information Part 2&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-019.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-020.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-021.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-022.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-023.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;8-2-topic-mining-and-analysis&quot;&gt;8-2 Topic Mining and Analysis&lt;/h3&gt;

&lt;h4 id=&quot;8-2-1-motivation-and-task-definition&quot;&gt;8-2-1 Motivation and Task Definition&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-024.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-025.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-026.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-027.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;8-2-2-term-as-topic&quot;&gt;8-2-2 Term as Topic&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-028.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-029.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-030.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-031.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-032.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-033.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;8-2-3-probabalistic-topic-models&quot;&gt;8-2-3 Probabalistic Topic Models&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-034.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-035.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-036.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-037.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-038.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-039.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-040.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-041.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-042.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-043.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;8-2-3-1-overview-of-statistical-language-models-part-1&quot;&gt;8-2-3-1 Overview of Statistical Language Models Part 1&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-044.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-045.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-046.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-047.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;8-2-3-2-overview-of-statistical-language-models-part-2&quot;&gt;8-2-3-2 Overview of Statistical Language Models Part 2&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-048.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-049.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-050.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-051.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;8-2-3-3-mining-one-topic&quot;&gt;8-2-3-3 Mining One Topic&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-052.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-053.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-054.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/20181017/CS410-wk8-img-055.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;cs-425-distributed-systems&quot;&gt;CS 425 Distributed Systems&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;No new content this week, midterm.&lt;/p&gt;

&lt;h1 id=&quot;cs-427-software-engineering&quot;&gt;CS 427 Software Engineering&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;goals-and-objectives-1&quot;&gt;Goals and Objectives&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Design pattern&lt;/li&gt;
  &lt;li&gt;Observer pattern&lt;/li&gt;
  &lt;li&gt;Composite pattern&lt;/li&gt;
  &lt;li&gt;Interpreter Pattern&lt;/li&gt;
  &lt;li&gt;Visitor Pattern&lt;/li&gt;
  &lt;li&gt;Template Method Pattern&lt;/li&gt;
  &lt;li&gt;Iterator Pattern&lt;/li&gt;
  &lt;li&gt;Strategy Pattern&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lecture-notes-1&quot;&gt;Video Lecture Notes&lt;/h2&gt;

&lt;h3 id=&quot;5-7-design-pattern&quot;&gt;5-7 Design Pattern&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A design pattern is the description of &lt;strong class=&quot;highlighted&quot;&gt;communicating objects and classes&lt;/strong&gt; that are customized to solve a general design problem in a particular context, identifying:
    &lt;ul&gt;
      &lt;li&gt;The participating classes and objects&lt;/li&gt;
      &lt;li&gt;Their roles and collaborations&lt;/li&gt;
      &lt;li&gt;The distribution of responsibilities&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Gang of Four Book: Design Patterns, elements of reusable object-oriented software
    &lt;ul&gt;
      &lt;li&gt;presents 23 object-oriented patterns:
        &lt;ul&gt;
          &lt;li&gt;creational patterns (5)&lt;/li&gt;
          &lt;li&gt;structural patterns (7)&lt;/li&gt;
          &lt;li&gt;behavioral patterns (11)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-8-observer-pattern&quot;&gt;5-8 Observer Pattern&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Using an observer pattern can reduce cycles of dependency (one to many dependency)
    &lt;ul&gt;
      &lt;li&gt;Cycles of dependence
        &lt;ul&gt;
          &lt;li&gt;If package A depends on package B, then you cannot run the tests for A unless you also have B
            &lt;ul&gt;
              &lt;li&gt;“A depends on B” means you cannot use A unless you have B&lt;/li&gt;
              &lt;li&gt;“Package A depends on packageB” means that something in A deponds on something in B&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;IF package A depends on package B, then package B should &lt;strong class=&quot;highlighted&quot;&gt;NOT&lt;/strong&gt; depend on package A
            &lt;ul&gt;
              &lt;li&gt;If classes C and D both depend on each other, put them in the same package&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-9-composite-pattern&quot;&gt;5-9 Composite Pattern&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Composite
    &lt;ul&gt;
      &lt;li&gt;problem:
        &lt;ul&gt;
          &lt;li&gt;Complex part-whole hierarchy has lots of similar classes
            &lt;ul&gt;
              &lt;li&gt;Example: book, chaptter, section, paragraph&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Objectives
        &lt;ul&gt;
          &lt;li&gt;Simplicity - treat composite (ie, composition of parts) like a part&lt;/li&gt;
          &lt;li&gt;Power - create new kind of part by composing existing ones&lt;/li&gt;
          &lt;li&gt;Safety - treat parts and composites uniformly (no special cases)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS427-wk8-img-1.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Behavioral Patterns:
    &lt;ul&gt;
      &lt;li&gt;Observer: Define a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.&lt;/li&gt;
      &lt;li&gt;Visitor: Represent an operation to be performed on the elements of an object structure.  Visitor lets you define a new operation without changing the classes of the elements on which it operates.&lt;/li&gt;
      &lt;li&gt;Interpreter: Given a language, define a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language.&lt;/li&gt;
      &lt;li&gt;Template Method: Define the skeleton of an algorithm in an operation, deferring some steps to subclasses.  Template Method lets subclasses redefine certain steps of an algorithm without changing the algorithm’s structure.&lt;/li&gt;
      &lt;li&gt;Iterator: Provide a way to access the elemetns of an aggregate object sequentially without exposing its underlying representation.&lt;/li&gt;
      &lt;li&gt;Strategy: Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Structural Patterns
    &lt;ul&gt;
      &lt;li&gt;Composite: Compose objects into tree structures to represent part-whole hierarchies. Composite lets clients treat individual objects and compositions of objects uniformly.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20181017/CS427-wk8-img-2.png&quot; alt=&quot;img&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

</description>
				<pubDate>Wed, 17 Oct 2018 00:00:00 -0500</pubDate>
				<link>/2018/10/17/MCS-Notes-Week-8</link>
				<guid isPermaLink="true">/2018/10/17/MCS-Notes-Week-8</guid>
			</item>
		
	</channel>
</rss>
